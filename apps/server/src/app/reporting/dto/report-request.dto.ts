import { IsBoolean, IsObject, IsOptional } from "class-validator";
import {
  Provider,
  ObservabilityReportProperties,
  ObservabilityReportMetadata,
  ObservabilityRequest,
  ObservabilityResponse,
} from "@pezzo/types";
import { ApiProperty } from "@nestjs/swagger";

export class ReportRequestDto<
  TProviderType extends Provider | unknown = unknown
> {
  @ApiProperty({
    description: "Additional properties for the report",
    type: Object,
    required: false,
    additionalProperties: true,
    example: { property1: "value1", property2: "value2" },
  })
  @IsObject()
  @IsOptional()
  properties?: ObservabilityReportProperties;

  @ApiProperty({
    description: "Metadata about the report",
    type: Object,
    additionalProperties: true,
    example: { metadata1: "value1", metadata2: "value2" },
  })
  @IsObject()
  @IsOptional()
  metadata: ObservabilityReportMetadata;

  @ApiProperty({
    description: "Information about the request that generated the report",
    type: Object,
    additionalProperties: true,
    example: { request1: "value1", request2: "value2" },
  })
  @IsObject()
  request: ObservabilityRequest<Provider>;

  @ApiProperty({
    description: "Information about the response generated by the request",
    type: Object,
    additionalProperties: true,
    example: { response1: "value1", response2: "value2" },
  })
  @IsObject()
  response: ObservabilityResponse<TProviderType>;

  @ApiProperty({
    description: "Whether caching is enabled for the report",
    type: Boolean,
    required: false,
    example: false,
  })
  @IsOptional()
  @IsBoolean()
  cacheEnabled?: boolean = false;

  @ApiProperty({
    description: "Whether the report was generated from a cache hit",
    type: Boolean,
    required: false,
    example: null,
  })
  @IsOptional()
  @IsBoolean()
  cacheHit?: boolean = null;
}
